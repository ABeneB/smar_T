<%- model_class = Tour -%>
<div class="page-header">
  <h1>Tour</h1>
</div>

<div class="fieldset">
<table class="table table-striped">
    <thead>
      <tr>
        <th><%= model_class.human_attribute_name(:place) %></th>
        <th>Art</th>
        <th><%= model_class.human_attribute_name(:location) %></th>
        <th><%= model_class.human_attribute_name(:time) %></th>
        <th><%= model_class.human_attribute_name(:duration) %></th>
        <th>Beschreibung</th>
      </tr>
    </thead>
    <tbody>
      <% @tour.order_tours.each do |order_tour| %>
        <tr>
          <td><%= order_tour.place+1 %></td>
          <td><%= order_tour.kind %></td>
          <td><%= order_tour.location %></td>
          <td><%= order_tour.time %></td>
          <td><%= order_tour.duration %></td>
          <td><%= order_tour.comment %></td>
        </tr>
      <% end %>
    </tbody>
  </table>

<% if current_user.is_driver? %>
  <td><%= link_to 'Start', edit_tour_path(@tour), :class => 'btn btn-info' %></td>
  <td><%= link_to 'Pause', edit_tour_path(@tour), :class => 'btn btn-info' %></td>
  <td><%= link_to 'Erledigt', edit_tour_path(@tour), method: :delete, 
        data: { confirm: 'Are you sure?' }, :class => 'btn btn-danger' %></td>   
<% end %>

<input type="text" id="info" disabled>

<div style='width: 800px;'>
  <div id="map" style='width: 900px; height: 400px;'></div>
</div>

<script>

$(document).ready(function(){
      
      setInterval(function(){findMe(); }, 10000); //alle 10000 Milisekunden wird die Postion ausgelesen
      //könnte anschließend in DB gespeichert werden per ajax. In diesem Prototypen nicht,
      // damit die Test zur Tourenbildung durchgeführt werden können
      
      path = <%=raw @hash.to_json %>
  
      map = new GMaps({
        div: '#map',
        lat: path[0].latitude,
        lng: path[0].longitude
      });
      
      line_path = _.map(path, function(point){
        return [point.latitude, point.longitude]
      })
      
      _.each(path, function(coord){
        map.addMarker({
          lat: coord.latitude,
          lng: coord.longitude,
          title: coord.place
        })
      })
      
      _.each(line_path, function(coord, index){
        if(line_path[index+1]){
          map.drawRoute({
            origin: [coord[0], coord[1]],
            destination: [line_path[index+1][0], line_path[index+1][1]],
            travelMode: 'driving',
            strokeColor: getRandomColor(),
            strokeOpacity: 0.6,
            strokeWeight: 6
          });
        }
      })
    });
    
function getRandomColor() {
    var colors  = ["red", "darkred", "blue", "darkblue", "green", "darkgreen", "black", "darkgrey"];
    color = _.sample(colors);
    return color;
}



</script>
